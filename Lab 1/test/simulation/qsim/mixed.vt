// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/17/2022 23:25:00"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    lab1_vhdl2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab1_vhdl2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg w1;
reg w2;
reg w3;
reg w4;
// wires                                               
wire g;
wire h;

// assign statements (if any)                          
lab1_vhdl2 i1 (
// port map - connection between master ports and signals/registers   
	.g(g),
	.h(h),
	.w1(w1),
	.w2(w2),
	.w3(w3),
	.w4(w4)
);
initial 
begin 
#120000 $stop;
end 

// w1
initial
begin
	w1 = 1'b0;
	w1 = #20000 1'b1;
	w1 = #20000 1'b0;
	w1 = #20000 1'b1;
	w1 = #40000 1'b0;
end 

// w2
initial
begin
	w2 = 1'b0;
	w2 = #20000 1'b1;
	w2 = #60000 1'b0;
	w2 = #20000 1'b1;
end 

// w3
initial
begin
	w3 = 1'b1;
	w3 = #40000 1'b0;
	w3 = #60000 1'b1;
end 

// w4
initial
begin
	w4 = 1'b0;
	w4 = #20000 1'b1;
	w4 = #40000 1'b0;
	w4 = #20000 1'b1;
	w4 = #20000 1'b0;
end 
initial 
begin 
#120000 $stop;
end 
endmodule

